.. _raster.wcs:

================================================================================
WCS -- OGC 웹 커버리지 서비스
================================================================================

.. shortname:: WCS

.. build_dependencies:: libcurl

선택적인 GDAL WCS(Web Coverage Service) 드라이버는 WCS 서버에 있는 커버리지를 래스터 데이터셋으로 사용할 수 있게 해줍니다. GDAL은 WCS 서버의 클라이언트로서 동작합니다.

`<WCS_GDAL>` XML 요소 하나를 담고 있는 로컬 서비스 설명 파일을 생성해서 WCS 서버에 접근할 수 있습니다. 이 요소 외에 어떤 공백이나 다른 내용도 없다는 사실이 중요합니다. GDAL 2.3버전부터 드라이버가 캐시 디렉터리에서 서비스 설명 파일을 관리한다고 간주합니다. 사용자는 옵션을 이용해서 서비스 파일의 내용을 제어해야 합니다.
데이터셋 이름은 :samp:`WCS:<URL>` 이며, 이때 <URL>은 추가할 서버의 URL입니다. 이 서버는 WCS 버전, 커버리지, 그리고 기타 파라미터들을 가지고 있을 수도 있습니다. WCS 버전이 2.0.1인 경우 GDAL 데이터 모델에 커버리지 데이터 모델을 매핑하는 방법을 제어하기 위한 심화 파라미터들을 지정할 수 있습니다.

URL이 커버리지 이름을 담고 있지 않은 경우, 드라이버가 서버로부터 케이퍼빌리티 문서를 가져와서 파싱한 다음 사용자에게 산출된 메타데이터를 출력하려 시도합니다. 커버리지는 하위 데이터셋으로 표현됩니다. URL이 커버리지 이름을 파라미터로 담고 있다면 ('coverage' 키는 WCS 버전에 상관없이 사용할 수 있습니다) 드라이버가 서버로부터 커버리지 설명 문서를 가져와서 파싱한 다음 서비스 설명 파일을 생성하려 시도합니다. 서비스 데이터의 상세 정보를 수집하기 위해 간단한 GetCoverage 요청을 전송할 수도 있습니다. 해당 서버의 케이퍼빌리티 파일이 캐시되지 않았다면, 그 파일도 가져올 것입니다.

(GDAL 2.3버전부터 지원하는) WCS 2.0.1버전부터, 커버리지가 2차원 이상일 수도 있습니다. 이런 경우, 드라이버가 커버리지 메타데이터를 추가해서 0으로만 구성된 밴드(zero band)를 출력할 것입니다. 이때 사용자는 옵션을 이용해서 드라이버에 추가 차원 및 데이터 필드 처리 방법을 지시해야만 합니다.

WCS 드라이버는 기본 수준에서 WCS 1.0.0, 1.1.0, 1.1.1, 1.1.2 및 2.0.1버전을 지원합니다. (0.7버전은 지원하지 않으며, 2.0.1버전은 GDAL 2.3버전부터 지원합니다.) GDAL이 지원하는 포맷의 단일 파일로 반환되는 모든 포맷이 작동할 것입니다. 이 드라이버는 이름에 "tiff"가 포함된 포맷을 선호할 것입니다. 그렇지 않은 경우, 처음 제공된 포맷으로 돌아갈 것입니다. 하지만 사용자가 선호 포맷을 설정할 수도 있습니다. DescribeCoverage 결과물로부터 좌표계를 읽어옵니다.

드라이버 케이퍼빌리티
-------------------

.. supports_georeferencing::

.. supports_virtualio::

서비스 설명 파일
------------------------

서비스 설명 파일은 다음 요소들을 Document 요소의 직계 하위 요소로 가지고 있습니다. 데이터셋 이름에 "WCS:<URL>" 문법을 사용하는 경우, 옵션을 이용해서 서비스 설명 파일의 내용을 수정할 수 있다는 사실을 기억하십시오.

-  **ServiceURL**:
   파라미터가 없는 서비스 URL입니다.

-  **Version**:
   통신에 사용되는 WCS 버전입니다. 데이터셋 이름에 "WCS:<URL>" 문법을 사용하는 경우 기본값은 2.0.1이며 서버의 응답이 사용자 요청을 변경할 수도 있습니다. 그렇지 않은 경우 기본값은 1.0.0입니다. 1.0.0, 1.1.0, 1.1.1, 1.1.2 및 2.0.1버전을 지원합니다.

-  **CoverageName**:
   데이터셋으로 사용되는 커버리지입니다.

-  **Format**:
   GetCoverage 호출에 사용되는 포맷입니다. 이 요소를 설정하지 않는 경우 드라이버가 포맷을 선택합니다. (WCS 2.0버전)

-  **PreferredFormat**:
   GetCoverage 호출에 사용되는 포맷입니다. 이 요소를 설정하지 않는 경우 드라이버가 포맷을 선택합니다. (WCS 1.0 및 1.1버전)

-  **Interpolation**:
   크기 조정 작업 시 사용되는 보간법입니다. 서버가 지원하는 값들 가운데 하나여야 합니다. (GDAL 2.3버전)

-  **BlockXSize**:
   캐시된 블록 원격 접근에 사용되는 블록 너비입니다.

-  **BlockYSize**:
   캐시된 블록 원격 접근에 사용되는 블록 높이입니다.

-  **OverviewCount**:
   밴드가 가지고 있는 것으로 표현할 오버뷰의 개수입니다. 기본값은 최상위 오버뷰의 크기가 상당히 작을 정도의 (약 1,000 x 1,000 미만이 될 정도의) 개수입니다.

-  **NoDataValue**:
   모든 밴드에 사용할 NODATA 값입니다. (NODATA가 없는 경우 설정하지 않습니다.) 일반적으로 드라이버가 이 값을 결정합니다. WCS 2.0.1버전부터 각 밴드에 값 하나를 설정하는, 쉼표로 구분된 목록을 설정할 수도 있습니다.

-  **범위 및 도메인을 제어하기 위한 요소들:**

   -  **Domain**:
      공간 차원에 사용되는 축들입니다. 기본값은 서버가 지정한 처음 두 개의 축을 사용하는 것입니다. 축 순서 바꾸기를 적용할 수도 있습니다.
      문법: *axis_name,axis_name*
      목록에 *field_name:field_name* 이 있는 경우 필드의 범위를 나타냅니다. (WCS 2.0.1버전 전용)

   -  **DefaultTime**:
      시간 차원을 가진 커버리지에 접근할 때 사용할 timePosition입니다. 기본적으로 값을 가장 최근에 제공한 시점으로 채웁니다. (WCS 1.0.0버전 전용)

   -  **FieldName**:
      접근할 필드명입니다. WCS 1.1버전 전용입니다. 기본값은 DescribeCoverage에 있는 첫 번째 필드입니다. WCS 1.1버전에서는 범위가 스칼라(scalar) 또는 벡터일 수도 있는 하나 이상의 필드로 이루어져 있습니다. 벡터 필드는 하나 이상의 밴드를 담고 있습니다.

   -  **BandCount**:
      데이터셋의 밴드 개수입니다. 일반적으로 드라이버가 결정합니다.

   -  **BandType**:
      사용할 픽셀 데이터 유형입니다. 일반적으로 드라이버가 결정합니다.

-  **통신을 제어하기 위한 요소들:**

   -  **Timeout**:
      원격 서비스 요청에 사용할 제한 시간입니다. 이 요소를 설정하지 않는 경우 libcurl 기본값을 사용합니다.

   -  **UserPwd**:
      원격 서버에 사용자 ID와 비밀번호를 전송합니다. *userid:password* 로 설정할 수도 있습니다.

   -  **HttpAuth**:
      사용할 인증 스키마를 제어합니다. BASIC, NTLM 또는 ANY 가운데 하나로 설정할 수도 있습니다.

   -  **GetCoverageExtra**:
      GetCoverage 요청에 URL 인코딩 형식으로 추가할 키워드 집합입니다.
      예: "&RESAMPLE=BILINEAR&Band=1"
      추가 파라미터는 알려진 파라미터가 아니어야 한다는 사실을 기억하십시오. (아래 참조)

   -  **DescribeCoverageExtra**:
      DescribeCoverage 요청에 URL 인코딩 형식으로 추가할 키워드 집합입니다.
      예: "&CustNo=775"

-  **서버의 문제점을 처리하기 위해 필요할 수도 있는 요소들(GDAL 2.3버전):**

.. note::
   이 옵션들은 -sd 스위치로 하위 데이터셋으로 전파되지 않습니다.

   -  **OriginAtBoundary**:
      서버가 그리드 원점이 픽셀 중심이 아니라 픽셀 경계에 있다고 리포트하는 경우 이 플래그를 설정하십시오.
      (WCS 버전이 1.0.0 및 2.0.1인 MapServer 7.0.7 이하 버전의 경우 사용하십시오.)

   -  **OuterExtents**:
      WCS 1.1 범위를 외부 픽셀의 중심이 아니라 외부 픽셀의 경계로 간주하도록 하려면 이 플래그를 설정하십시오.
      (GeoServer의 경우 사용하십시오.)

   -  **BufSizeAdjust**:
      WCS 1.1버전에서 응답이 예상 크기가 아니기 때문에 데이터 접근이 실패하는 경우 0.5로 설정하십시오.
      (GeoServer의 경우 사용하십시오.)

   -  **OffsetsPositive**:
      WCS 버전이 2.0.1인 MapServer의 경우 NrOffsets와 함께 사용하십시오.

   -  **NrOffsets**:
      서버가 GridOffsets에 값 2개만 있어야 한다고 요구하는 경우 2로 설정하십시오.
      서버가 MapServer 또는 ArcGIS인 경우 사용하십시오. MapServer인 경우 OffsetsPositive도 함께 사용하십시오.

   -  **GridCRSOptional**:
      요청이 크기 조정 안 된 경우 드라이버가 WCS 1.1 GetCoverage 요청에서 Grid\* 파라미터를 건너뛰도록 합니다. GeoServer의 경우 사용하지 마십시오.

   -  **NoGridAxisSwap**:
      드라이버가 축 순서를 바꿔서는 안 된다고 하려면 이 플래그를 설정하십시오.
      그리드 도형을 읽어올 때 (WCS 1.1버전에서는 원점과 오프셋, WCS 2.0.1버전에서는 그리드 엔벨로프(envelope), 축 라벨 및 오프셋) 일반적으로는 축 순서를 바꾸지만 이 플래그를 설정한 경우 바꾸지 않습니다. WCS 1.1버전에서는 좌표계의 축들이 역전된 경우 축 순서 바꾸기를 수행할 것입니다. 2.0.1버전에서는 GridFunction에 있는 sequenceRule의 axisOrder가 역전된 상태라고 정의하는 경우 축 순서 바꾸기를 수행할 것입니다. MapServer 및 GeoServer로부터 커버리지 설명을 파싱하는 경우, 일반적으로 WCS 1.1 및 2.0.1버전 모두에 이 플래그가 필요합니다.

   -  **SubsetAxisSwap**:
      WCS 2.0.1 GetCoverage 요청 작성 시 드라이버가 boundedBy.Envelope.axisLabels에 있는 축 이름들의 순서를 바꿔야 한다고 하려면 이 플래그를 설정하십시오. 서버가 GeoServer인데 EPSG가 축 순서 바꾸기를 지시하는 경우 이 플래그가 필요합니다.

   -  **UseScaleFactor**:
      WCS 2.0.1 GetCoverage 요청 작성 시 드라이버가 크기 조정(scale-to-size) 접근법이 아니라 비율 조정(scale-by-factor) 접근법을 사용해야 한다고 하려면 이 플래그를 설정하십시오. 서버가 ArcGIS인 경우 이 플래그가 필수입니다.

범위 및 차원 하위 집합 작업
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

WCS 2.0.1버전 사용 시, (필드 또는 밴드의) 범위 및 차원의 하위 집합(subset)을 작업할 수 있고, 해야 할 수도 있습니다. 커버리지 데이터 모델이 지리 좌표 또는 맵 좌표 2개를 넘어서는 경우, GDAL을 위해 초과 차원을 분할(slice)시켜야만 합니다. 커버리지가 수많은 필드를 가지고 있을 수도 있는데, GDAL 데이터셋은 커버리지에서 하위 집합만 요구합니다.

범위 및 차원 하위 집합 작업은 URL 파라미터를 통해 수행되어야만 합니다. 커버리지 하나로부터 하나 이상의 서로 다른 GDAL 데이터셋들을 생성할 수 있기 때문입니다. WCS 캐시 관점에서, 이는 GDAL 데이터셋과 관련된 파일 집합이 있을 수도 있다는 의미입니다:

#. 서버 Capabilities 파일과 이로부터 생성된 GDAL 데이터셋 메타데이터 파일 (WCS 버전 숫자를 가진 key = URL)
#. 서버 DescribeCoverage 파일, 이로부터 생성된 GDAL 서비스 파일 및 이를 위해 생성된 GDAL 데이터셋 메타데이터 파일 (WCS 버전 숫자와 커버리지 이름을 가진 key = URL)
#. 해당 데이터셋 전용 GDAL 서비스 파일 및 GDAL 데이터셋 메타데이터 파일 (WCS 버전 숫자, 커버리지 이름, 범위 및 차원 하위 집합 작업 파라미터를 가진 key = URL)

다음 URL 파라미터들을 이용해서 범위 및 차원 하위 집합 작업을 제어합니다. 서비스 파일에 옵션을 지정해서 설정할 수도 있다는 사실을 기억하십시오. URL 파라미터를 우선할 것입니다.

-  **RangeSubset**:
   데이터셋에 사용할 커버리지 필드의 하위 집합을 선택합니다.
   문법: *field_name,field_name:field_name,..*
   (주의: 서버가 범위 하위 집합 확장 사양을 구현하고 있어야 합니다.)

-  **Subset**:
   서버로부터 데이터를 가져올 때 차원을 다듬거나(trim) 분할(slice)시킵니다.
   문법: *axis_name(trim_begin_value,trim_end_value);axis_name(slice_value)*
   드라이버가 지리 또는 맵 좌표를 다듬는다는 사실을 기억하십시오.

기타 WCS 파라미터
~~~~~~~~~~~~~~~~~~~~

앞에서 설명한 파라미터들 외에 다음 WCS 2.0.1버전 파라미터도 인식합니다. 모든 파라미터를 옵션을 통해 또는 URL에 직접 삽입해서 설정할 수 있습니다. URL 파라미터를 우선할 것입니다. 서버 버전에 따라 이 파라미터들을 지원 또는 인식하지 못 할 수도 있다는 사실을 기억하십시오.

-  MediaType
-  UpdateSequence
-  GEOTIFF:COMPRESSION
-  GEOTIFF:JPEG_QUALITY
-  GEOTIFF:PREDICTOR
-  GEOTIFF:INTERLEAVE
-  GEOTIFF:TILING
-  GEOTIFF:TILEWIDTH

열기 옵션
~~~~~~~~~~~~

"WCS:<URL>" 데이터셋 이름 문법을 사용하는 경우, 드라이버와 서비스 설명 파일의 내용을 제어하기 위해 열기 옵션을 사용합니다. URL이 커버리지 이름을 담고 있지 않다면 서비스 설명 파일을 이용하지 않기 때문에, 서비스 설명 파일에 열기 옵션을 작성하지 않습니다. 데이터셋 이름과는 별개로 열기 옵션을 지정하고, GDAL 유틸리티 프로그램의 경우 -oo 스위치를 사용해서 (*-oo "NAME=VALUE"*) 열기 옵션을 지정합니다. 이 -oo 스위치는 옵션 하나만 지정할 수 있지만, 스위치를 반복 사용하면 하나 이상의 열기 옵션을 지정할 수 있습니다.

서비스 설명 파일에 저장돼 있는 DescribeCoverageExtra 및 GetCoverageExtra뿐만 아니라, 서버로부터 전체 케이퍼빌리티를 요구하는 경우 열기 옵션으로 사용할 수 있는 GetCapabilitiesExtra도 있습니다. SKIP_GETCOVERAGE 열기 옵션을 지정하면 드라이버가 케이퍼빌리티 또는 커버리지 설명으로부터 밴드 개수 및 밴드 데이터 유형을 판단할 수 없는 경우 일반적으로 수행하는 GetCoverage 요청을 서버로 전송하지 못 하도록 할 수 있습니다. GetCoverage 요청이 실패하는 경우 이 옵션을 지정해야 할 수도 있습니다.

WCS 드라이버에 앞에서 설명한 모든 요소 이름들을 옵션으로 지정할 수 있습니다. 옵션은 공식적으로 "Name=TRUE"이어야 하지만, 플래그의 경우 "Name"만으로도 충분합니다.

캐시
~~~~~~~~~

"WCS:<URL>" 데이터셋 이름 문법을 사용하는 경우, 캐시에 서버 응답, 서비스 설명 파일 그리고 메타데이터 파일을 저장합니다. 일반적으로, 캐시에 필요한 리소스가 존재하는 경우 서버에 추가 호출하지 않고 캐시의 리소스를 사용할 것입니다.

캐시 디렉터리의 기본 위치는 ``$HOME/.gdal/wcs_cache`` 입니다.

비어 있는 URL을 이용해서 캐시의 콘텐츠를 하위 데이터셋으로 볼 수 있습니다:

::

   gdalinfo "WCS:"

다음은 캐시 제어 옵션/플래그입니다:

-  **CACHE=path**:
   기본 캐시 위치를 대체합니다.

-  **CLEAR_CACHE**:
   캐시를 완전히 초기화하고 모든 파일을 삭제합니다.

-  **REFRESH_CACHE**:
   캐시 항목을 -- 가장 최근 호출에 따라 케이퍼빌리티든 커버리지든 -- 삭제합니다.

-  **DELETE_FROM_CACHE=k**:
   캐시 항목을 (하위 데이터셋 k를) 삭제합니다.

WCS: 데이터셋 이름 문법
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

데이터셋 이름에 있는 URL은 완전한 WCS 요청 URL이 아닙니다. GetCapabilities, DescribeCoverage, 및 GetCoverage 요청 URL은 -- 특히 쿼리 부분은 드라이버가 작성합니다. 일반적으로 사용자는 서버 주소에 버전 및 커버리지 파라미터만 추가해주면 됩니다. 'coverage' 문자열을 커버리지 파라미터 키로 사용할 수 있지만, 서로 다른 WCS 버전은 서로 다른 키를 사용합니다. 캐시 키에는 항상 'coverage'를 사용합니다.

사용자가 URL에 임의의 표준 및 비표준 추가 파라미터를 추가할 수도 있습니다. 하지만 이런 경우, URL이 캐시 데이터베이스 키이며 케이퍼빌리티 문서는 이 키를 통해 커버리지 문서와 링크된다는 사실을 기억해야 합니다. Extra 열기 옵션을 사용할 것을 권장합니다.

시간
~~~~

이 드라이버는 시간 기반 WCS 1.0.0 서버를 실험적으로 지원합니다. 초기 접근 시 마지막으로 제공된 시점(time position)을 DefaultTime으로 식별할 것입니다. 데이터셋에 사용할 수 있는 시점들 각각을 하위 데이터셋으로 취급할 것입니다.

서비스 설명이 파일명인 경우 시간 기반 하위 데이터셋을 지원하지 않는다는 사실을 기억하십시오. 현재 WCS 1.0.0버전이 아닌 경우 시간 지원을 사용할 수 없습니다.

예시
~~~~~~~~

gdalinfo로 MapServer가 서비스하는 커버리지를 호출:

::

   gdalinfo \
   -oo INTERLEAVE=PIXEL \
   -oo OffsetsPositive \
   -oo NrOffsets=2 \
   -oo NoGridAxisSwap \
   -oo BandIdentifier=none \
   "WCS:http://194.66.252.155/cgi-bin/BGS_EMODnet_bathymetry/ows?VERSION=1.1.0&coverage=BGS_EMODNET_CentralMed-MCol"


gdal_translate로 GeoServer가 서비스하는 커버리지의 크기 조정된 한 부분을 호출:

::

   gdal_translate \
   -oo CACHE=wcs_cache \
   -oo CLEAR_CACHE \
   -oo INTERLEAVE=PIXEL \
   -projwin 377418 6683393.87938218 377717.879386966 6683094 \
   -oo Subset="time(1985-01-01T00:00:00.000Z)" \
   -outsize 60 0 \
   "WCS:https://beta-karttakuva.maanmittauslaitos.fi/wcs/service/ows?version=2.0.1&coverage=ortokuva__ortokuva" \
   scaled.tiff

참고
--------

-  `OGC WCS 표준 <http://www.opengeospatial.org/standards/wcs>`_
